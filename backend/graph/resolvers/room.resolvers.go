package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.42

import (
	"context"
	"fmt"
	"time"

	"github.com/ariefsn/ngobrol/entities"
	"github.com/ariefsn/ngobrol/helper"
)

// RoomCreate is the resolver for the roomCreate field.
func (r *mutationResolver) RoomCreate(ctx context.Context, input entities.RoomCreatePayload) (*entities.RoomDataDetails, error) {
	panic(fmt.Errorf("not implemented: RoomCreate - roomCreate"))
}

// RoomDetails is the resolver for the roomDetails field.
func (r *queryResolver) RoomDetails(ctx context.Context) (*entities.RoomDataDetails, error) {
	code := helper.GetAuthRoomCodeFromContext(ctx)
	return r.RoomService.GetByCode(ctx, code)
}

// SubRoomDetails is the resolver for the subRoomDetails field.
func (r *subscriptionResolver) SubRoomDetails(ctx context.Context, code string) (<-chan *entities.RoomDataDetails, error) {
	ch := make(chan *entities.RoomDataDetails)

	go func() {
		defer close(ch)

		for {
			time.Sleep(1 * time.Second)

			room, _ := r.RoomService.GetByCode(ctx, code)

			select {
			case <-ctx.Done():
				return
			case ch <- room:
			}
		}
	}()

	return ch, nil
}
